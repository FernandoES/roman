/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package roman;
import org.junit.Test;
import static org.junit.Assert.*;

import java.lang.reflect.Method;

public class AppTest {

    @Test 
    public void convertArabicToRoman() {
        ArabicToRomanConverter arabicConverter = new ArabicToRomanConverter();
        assertEquals( arabicConverter.convertArabicToRoman(105), "CV");
    }

    @Test
    public void convertRomanToArabic() {
        RomanToArabicConverter romanConverter = new RomanToArabicConverter();
        assertEquals(romanConverter.convertRomanNumberToArabic("CCXC"), 290);
    }

    @Test
    public void testArabicZeroRejected(){
        try {
            UserInteractor interactor = new UserInteractor();
            Class classe = interactor.getClass();
            Method method = classe.getDeclaredMethod("checkArabicNumberErrors", Integer.class);
            assertFalse((boolean) method.invoke(interactor, 0));
        } catch(Exception e) {
            System.out.println(e.toString());
         }
    }

    @Test
    public void testArabicTooBigRejected(){
        try {
            UserInteractor interactor = new UserInteractor();
            Class classe = interactor.getClass();
            Method method = classe.getDeclaredMethod("checkArabicNumberErrors", Integer.class);
            assertFalse((boolean) method.invoke(interactor, 10000001));
        } catch(Exception e) {
            System.out.println(e.toString());
         }
    }
    
    @Test
    public void testWrongRomanRejected(){
        try {
            UserInteractor interactor = new UserInteractor();
            Class classe = interactor.getClass();
            Method method = classe.getDeclaredMethod("allCharactersAreValid", String.class);
            assertFalse((boolean) method.invoke(interactor, "GGG"));
        } catch(Exception e) {
            System.out.println(e.toString());
         }
    }

    @Test
    public void testRightRomanRejected(){
        try {
            UserInteractor interactor = new UserInteractor();
            Class classe = interactor.getClass();
            Method method = classe.getDeclaredMethod("allCharactersAreValid", String.class);
            assertTrue((boolean) method.invoke(interactor, "XIV"));
        } catch(Exception e) {
            System.out.println(e.toString());
         }
    }
}
